/*------------------------------------*\
    #MEDIA
\*------------------------------------*/

/**
 * Makes images fit within it's fluid parent wrapper while maintaining
 * aspect ratio.
 */
img {
    max-width: 100%;
    height: auto;
    display: block;
}

/* Make sure embeds and iframes fit their containers */
embed,
iframe,
object {
	max-width: 100%;
}


/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Example HTML:
 *
 * <div class="embed-wrap embed-wrap--4by3">
 *   <iframe class="embed-wrap-item" src="…"></iframe>
 * </div>
 *
 * <div class="embed-wrap embed-wrap--16by9">
 *   [iframe|object|embed]
 * </div>
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */

.embed-wrap {
  display: block;
  overflow: hidden;
  position: relative;
}

/**
 * The aspect-ratio hack is applied to a pseudo-element because it allows the
 * component to respect `max-height`. Default aspect ratio is 1:1.
 */

.embed-wrap:before {
  content: "";
  display: block;
  padding-bottom: 100%;
  width: 100%;
}

/**
 * Modifier: 3:1 aspect ratio
 */

.embed-wrap--3by1:before {
  padding-bottom: calc(100% / 3);
}

/**
 * Modifier: 2:1 aspect ratio
 */

.embed-wrap--2by1:before {
  padding-bottom: 50%;
}

/**
 * Modifier: 16:9 aspect ratio
 */

.format-video > .embed-wrap,
.embed-wrap--16by9:before {
  padding-bottom: 56.25%;
}

/**
 * Modifier: 4:3 aspect ratio
 */

.embed-wrap--4by3:before {
  padding-bottom: 75%;
}

/**
 * Works automatically for iframes, embeds, and objects to account for
 * situations where you cannot modify the enbedded element's attributes (e.g.,
 * 3rd party widget code).
 */

.embed-wrap-item,
.embed-wrap iframe,
.embed-wrap embed,
.embed-wrap object {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}




